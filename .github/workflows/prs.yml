name: prs

on:
  workflow_dispatch: null
  schedule:
    - cron:  '*/5 * * * *'

jobs:
  prs:
    name: prs
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2

      - name: turnstyle-python
        id: turnstyle
        uses: beckermr/turnstyle-python@v1
        with:
          continue-after-seconds: 10
          poll-interval-seconds: 5
          github-token: ${{ secrets.AUTOTICK_BOT_TOKEN }}

      - uses: conda-incubator/setup-miniconda@v2
        if: success() && ! steps.turnstyle.outputs.force_continued
        with:
          python-version: 3.7
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true
          miniforge-version: latest
          miniforge-variant: Mambaforge

      - name: do local setup and stop me if needed
        if: success() && ! steps.turnstyle.outputs.force_continued
        shell: bash -l {0}
        run: |
          source local_setup.sh
          python stop_me_if_needed.py

      # - name: write heartbeat
      #   shell: bash -l {0}
      #   run: |
      #     python write_heartbeat.py ${ACTION_NAME}
      #   env:
      #     PASSWORD: ${{ secrets.AUTOTICK_BOT_TOKEN }}
      #     ACTION_NAME: ${{ github.workflow }}

      - name: install bot code
        if: success() && ! steps.turnstyle.outputs.force_continued
        shell: bash -l {0}
        run: |
          source install_bot_code.sh
        env:
          PASSWORD: ${{ secrets.AUTOTICK_BOT_TOKEN }}

      - name: update prs
        if: success() && ! steps.turnstyle.outputs.force_continued
        shell: bash -l {0}
        run: |
          pushd cf-graph
          conda activate run_env

          export CIRCLE_BUILD_URL="https://github.com/regro/autotick-bot/actions/runs/${RUN_ID}"
          export CIRCLE_BUILD_NUM="actually-actions-${RUN_ID}"
          conda-forge-tick --run 6
          popd
        env:
          USERNAME: regro-cf-autotick-bot
          PASSWORD: ${{ secrets.AUTOTICK_BOT_TOKEN }}
          RUN_ID: ${{ github.run_id }}

      - name: deploy
        if: github.ref == 'refs/heads/master' && ! cancelled() && ! steps.turnstyle.outputs.force_continued
        shell: bash -l {0}
        run: |
          pushd cf-graph
          conda activate run_env

          export CIRCLE_BUILD_URL="https://github.com/regro/autotick-bot/actions/runs/${RUN_ID}"
          export CIRCLE_BUILD_NUM="actually-actions-${RUN_ID}"
          conda-forge-tick --run -1

          popd
        env:
          PASSWORD: ${{ secrets.AUTOTICK_BOT_TOKEN }}
          RUN_ID: ${{ github.run_id }}

      - name: trigger next job
        uses: benc-uk/workflow-dispatch@v1
        if: github.ref == 'refs/heads/master' && ! cancelled() && ! failure() && ! steps.turnstyle.outputs.force_continued
        with:
          workflow: prs
          token: ${{ secrets.AUTOTICK_BOT_TOKEN }}

      - name: trigger status page
        uses: benc-uk/workflow-dispatch@v1
        if: github.ref == 'refs/heads/master' && ! cancelled() && ! failure() && ! steps.turnstyle.outputs.force_continued
        with:
          workflow: update-status-page
          token: ${{ secrets.AUTOTICK_BOT_TOKEN }}

      - name: bump on fail
        shell: bash -l {0}
        if: github.ref == 'refs/heads/master' && failure() && ! steps.turnstyle.outputs.force_continued
        run: |
          export ACTION_URL="https://github.com/regro/autotick-bot/actions/runs/${RUN_ID}"
          python bump_bot_team.py
        env:
          PASSWORD: ${{ secrets.AUTOTICK_BOT_TOKEN }}
          RUN_ID: ${{ github.run_id }}
          ACTION_NAME: ${{ github.workflow }}
